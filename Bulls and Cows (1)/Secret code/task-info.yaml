type: edu
files:
- name: src/bullscows/Main.java
  visible: true
  text: |
    package bullscows;

    public class Main {
        public static void main(String[] args) {
            System.out.println("Hello World!");
        }
    }
  learner_created: false
- name: test/BullsCowsTest.java
  visible: false
  text: |-
    import bullscows.Main;
    import org.hyperskill.hstest.dynamic.input.DynamicTestingMethod;
    import org.hyperskill.hstest.stage.StageTest;
    import org.hyperskill.hstest.testcase.CheckResult;
    import org.hyperskill.hstest.testing.TestedProgram;

    import java.util.ArrayList;
    import java.util.Arrays;
    import java.util.LinkedHashSet;
    import java.util.List;
    import java.util.stream.Collectors;

    import static org.hyperskill.hstest.testing.expect.Expectation.expect;

    public class BullsCowsTest extends StageTest<String> {

        // basic test case
        @DynamicTestingMethod
        CheckResult test1() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("4").toLowerCase().trim();

            return outputCheck(output, 4);
        }

        @DynamicTestingMethod
        CheckResult test2() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("1").toLowerCase().trim();

            return outputCheck(output, 1);
        }

        // test of incorrect input
        @DynamicTestingMethod
        CheckResult test4() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("11").toLowerCase().trim();

            return outputCheck(output, 11);
        }

        @DynamicTestingMethod
        CheckResult test5() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("6").toLowerCase().trim();

            return outputCheck(output, 6);
        }

        @DynamicTestingMethod
        CheckResult test6() {
            TestedProgram main = new TestedProgram(Main.class);
            main.start();
            String output = main.execute("3").toLowerCase().trim();

            return outputCheck(output, 3);
        }


        CheckResult outputCheck(String source, int length) {

            if (length > 10) {
                if (source.toLowerCase().contains("error")) {
                    return CheckResult.correct();
                } else {
                    return CheckResult.wrong("An error message expected with input " +
                            "\"" + length + "\"");
                }
            }

            List<Integer> integers = expect(source).toContain(1).integers();
            source = "" + integers.get(0);

            if (source.length() != length) {
                return CheckResult.wrong("The output number of your program has " +
                        "an incorrect length (found " + source.length() + ")");
            }

            List<Integer> temp = stringToArrayOfNumbers(source);
            temp = new ArrayList<>(new LinkedHashSet<>(temp));

            if (temp.toArray().length != source.length()) {
                return CheckResult.wrong("Digits in the generated number are not unique.");
            }

            return CheckResult.correct();
        }

        private static List<Integer> stringToArrayOfNumbers(String array) {
            return Arrays.stream(array.split(""))
                    .map(Integer::parseInt)
                    .collect(Collectors.toList());
        }
    }
  learner_created: false
- name: src/bullscows/Grader.java
  visible: true
  text: |
    package bullscows;

    public class Grader {

        private String[] secreteCode;

        public String[] getSecreteCode(){
            return secreteCode;
        }

        public void setSecreteCode(String[] secreteCode) {
            this.secreteCode = secreteCode;
        }

        public void check(String[] guess) {
            int cows = 0;
            int bulls = 0;
            String answer = "";
            String secretCodeFour = secreteCode[0] + secreteCode[1] +
                    secreteCode[2] +secreteCode[3];

            for (int i = 0; i < 4; i++) {
                if (guess[i].equals(secreteCode[i])) {
                    bulls += 1;
                }
            }
            for (int i = 0; i < 4; i++) {
                for (int j = 0; j < 4; j++) {
                    if (i != j && secreteCode[i].equals(guess[j])) {
                        cows += 1;
                    }
                }
            }
            if (bulls == 0 && cows != 0) {
                System.out.printf("Grade: %d cow(s). The secret code is %s", cows, secretCodeFour);
            } else if (bulls != 0 && cows == 0) {
                System.out.printf("Grade: %d bull(s). The secret code is %s", bulls, secretCodeFour);
            } else if (bulls != 0) {
                System.out.printf("Grade: %d bull(s) and %d cow(s). The secret code is %s", bulls, cows, secretCodeFour);
            } else {
                System.out.println("Grade: None. The secret code is " + secretCodeFour);
            }

        }


    }
  learner_created: true
- name: src/bullscows/RandomNumber.java
  visible: true
  learner_created: true
feedback_link: https://hyperskill.org/projects/53/stages/289/implement
status: Solved
feedback:
  message: Congratulations! Continue on <a href="https://hyperskill.org/projects/53/stages/289/implement">JetBrains
    Academy</a>
  time: Tue, 13 Oct 2020 20:40:31 UTC
record: -1
